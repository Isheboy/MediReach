{
  "openapi": "3.0.3",
  "info": {
    "title": "MediReach API (minimal)",
    "version": "1.0.0",
    "description": "Compact OpenAPI spec for auth and appointments."
  },
  "servers": [{ "url": "http://localhost:5000" }],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "phone"],
        "properties": {
          "name": { "type": "string" },
          "phone": { "type": "string" }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["phone"],
        "properties": {
          "phone": { "type": "string" }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "errors": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "AppointmentCreate": {
        "type": "object",
        "required": ["facilityId", "service", "scheduledAt"],
        "properties": {
          "facilityId": { "type": "string" },
          "service": { "type": "string" },
          "scheduledAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-11-01T09:00:00Z"
          },
          "notes": { "type": "string" },
          "patientPhone": { "type": "string" }
        }
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "facilityId": { "type": "string" },
          "service": { "type": "string" },
          "scheduledAt": { "type": "string", "format": "date-time" },
          "status": { "type": "string" }
        }
      },
      "UpdateStatus": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "canceled", "completed"]
          }
        }
      },
      "Reminder": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "appointmentId": { "type": "string" },
          "patientPhone": { "type": "string" },
          "scheduledSendAt": { "type": "string", "format": "date-time" },
          "sentAt": { "type": "string", "format": "date-time" },
          "status": { "type": "string" },
          "providerMessageId": { "type": "string" },
          "providerResponse": { "type": "object" }
        }
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registered",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenResponse" }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login by phone",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenResponse" }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout (revoke token)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Logged out" }
        }
      }
    },
    "/api/appointments": {
      "post": {
        "summary": "Create appointment",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppointmentCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Appointment" }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get patient appointments",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Appointment" }
                }
              }
            }
          }
        }
      }
    },
    "/api/appointments/{id}": {
      "patch": {
        "summary": "Update appointment status",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateStatus" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Appointment" }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/appointments/{id}/send-test-sms": {
      "post": {
        "summary": "Send an ad-hoc test SMS for appointment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Sent",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Reminder" }
              }
            }
          }
        }
      }
    },
    "/api/sms/reminder/{messageId}": {
      "get": {
        "summary": "Lookup Reminder by provider messageId",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Reminder" }
              }
            }
          },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/sms/callback": {
      "post": {
        "summary": "Provider webhook (form-encoded)",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": { "type": "object" }
            }
          }
        },
        "responses": { "200": { "description": "ok" } }
      }
    },
    "/api/sms/callback/json": {
      "post": {
        "summary": "Provider webhook (JSON) - useful for testing",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "type": "object" } }
          }
        },
        "responses": { "200": { "description": "ok" } }
      }
    }
  }
}
